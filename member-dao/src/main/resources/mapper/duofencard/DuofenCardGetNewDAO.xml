<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gt.member.dao.duofencard.DuofenCardGetNewDAO">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.gt.duofencard.entity.DuofenCardGetNew">
		<id column="receiveId" property="receiveId" />
		<result column="cardId" property="cardId" />
		<result column="getType" property="getType" />
		<result column="isbuy" property="isbuy" />
		<result column="code" property="code" />
		<result column="state" property="state" />
		<result column="getDate" property="getDate" />
		<result column="memberId" property="memberId" />
		<result column="startTime" property="startTime" />
		<result column="endTime" property="endTime" />
		<result column="busId" property="busId" />
        <result column="verificationType" property="verificationType"/>
		<result column="storeId" property="storeId" />
		<result column="operateBusId" property="operateBusId" />
		<result column="operateDate" property="operateDate" />
		<result column="recommendId" property="recommendId" />
		<result column="useLocation" property="useLocation" />
	</resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        receiveId, cardId AS cardId, getType AS getType,isbuy, code, state, getDate AS getDate, memberId AS memberId, startTime AS startTime, endTime AS endTime, busId AS busId, storeId AS storeId, operateBusId AS operateBusId, operateDate AS operateDate, recommendId AS recommendId,useLocation
    </sql>
    <select id="selectReceiveCouponCount"  parameterType="hashmap" resultType="java.lang.Integer">
        select count(1) from t_duofen_card_get_new c INNER JOIN t_wx_bus_member m on c.memberId=m.id
        <where>
            <if test="cardId!=null and cardId!=''">
                AND  c.cardId=${cardId}
            </if>
            <if test="searchContent!=null and searchContent!=''">
                AND m.phone like '%${searchContent}%'
            </if>
        </where>
    </select>

    <select id="getReceiveCouponList"  parameterType="hashmap"  resultType="java.util.Map">
        select
        c.*,m.nickname,m.phone
        from t_duofen_card_get_new c INNER JOIN t_wx_bus_member m on c.memberId=m.id
        <where>
            <if test="cardId!=null and cardId!=''">
                AND  c.cardId=${cardId}
            </if>
            <if test="searchContent!=null and searchContent!=''">
                AND m.phone like '%${searchContent}%'
            </if>
        </where>
    </select>


	<select id="countDuofenCardGetByCardId" resultType="java.lang.Integer">
		select count(*) from t_duofen_card_get_new where memberId=#{memberId} and cardId=#{cardId}
		<if test="date!=null">
			and getDate>=#{date}
		</if>

	</select>


    <select id="countByCardIds" resultType="java.util.Map">
        select cardId, count(*) as count from t_duofen_card_get_new
        <where>
            <foreach close=")" collection="cardIds" item="cardId" open="("
                     separator="or">
                cardId=#{cardId}
            </foreach>
        </where>
        group by cardId
    </select>

    <select id="findByMemberId" resultType="java.util.Map">
        select dg.receiveId, dg.startTime,dg.endTime,cn.* from t_duofen_card_get_new dg
        inner join t_duofen_card_new cn on dg.cardId=cn.id
        where dg.memberId=#{memberId} and dg.state=0

    </select>

    <select id="findFriendByMemberId" resultType="Map">
        select dg.receiveId,dg.startTime,dg.endTime,cn.* from t_duofen_card_get_new dg
        inner join t_duofen_card_new cn on dg.cardId=cn.id
        where  dg.state=0 and dg.busId=#{busId} and
        <foreach close=")" collection="getIds" item="getId" open="("
                 separator="or">
            dg.receiveId=#{getId}
        </foreach>
    </select>

    <select id="findInvalidByMemberId" resultType="Map">

          select dg.state,dg.startTime,dg.endTime,cn.* from t_duofen_card_get_new dg
        inner join t_duofen_card_new cn on dg.cardId=cn.id
        where dg.memberId=#{memberId} and (dg.state=1 or dg.state=2 )
    </select>


    <select id="countByCardId" resultType="java.lang.Integer">
        select count(*) from t_duofen_card_get_new where cardId=#{cardId}

    </select>
    <select id="usageStatistics" resultType="java.util.Map" parameterType="integer">
        SELECT
          storeId,
          COUNT(1) AS quantity,
          t.business_name
        FROM
          t_duofen_card_get_new n
          LEFT JOIN t_wx_shop t
            ON n.storeId = t.id
        WHERE storeId != 0
          AND busid = #{busId}
        GROUP BY storeId
    </select>

</mapper>
